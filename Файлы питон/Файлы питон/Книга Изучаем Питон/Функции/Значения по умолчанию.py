# Для каждого параметра вашей функции можно определить значение по умолчанию. Если при вызове функции передается аргумент, соответствующий данному
# параметру, Python использует значение аргумента, а если нет — использует значение по умолчанию. Таким образом, если для параметра определено значение
# по умолчанию, вы можете опустить соответствующий аргумент, который обычно
# включается в вызов функции. Значения по умолчанию упрощают вызовы функций
# и проясняют типичные способы использования функций.
# Например, если вы заметили, что большинство вызовов describe_pet() используется для описания собак, задайте animal_type значение по умолчанию 'dog'. Теперь
# в любом вызове describe_pet() для собаки эту информацию можно опустить:

def describe_pet(pet_name,animal_type = 'dog'):
    print(f'I have a {animal_type.title()}')
    print(f"My {animal_type.title()}'s name is {pet_name.title()}")

describe_pet('wiliam')

# Мы изменили определение describe_pet() и включили для параметра animal_type
# значение по умолчанию 'dog'. Если теперь функция будет вызвана без указания
# animal_type, Python знает, что для этого параметра следует использовать значение 'dog':